# CI workflow: static analysis, doctests, cross-platform tests with coverage and fuzzing, and PKCS#11 SoftHSM tests.
name: CI

on:
  push:
    branches: [main]
  pull_request:

defaults:
  run:
    shell: bash

env:
  PIP_CACHE_DIR: ~/.cache/pip

jobs:

  static-analysis:
    name: Static analysis
    runs-on: ubuntu-latest
    steps:
      - &checkout
        uses: actions/checkout@v4
      - &setup-python
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: pyproject.toml
      - &cache-pip
        name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-
      - &install-deps
        name: Install dependencies
        run: pip install -e .[dev,pqc] pytest-html
      - name: Run flake8
        run: flake8 .
      - name: Run mypy
        run: mypy src tests

  doctest:
    name: Doctests
    runs-on: ubuntu-latest
    steps:
      - *checkout
      - <<: *setup-python
      - *cache-pip
      - *install-deps
      - name: Run doctests
        run: |
          pytest --doctest-modules -q --cov=cryptography_suite \
                 --cov-report=xml --cov-report=html --html=pytest-report.html
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: doctest-reports
          path: |
            coverage.xml
            htmlcov
            pytest-report.html

  test-matrix:
    name: Tests (matrix)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.9','3.10','3.11','3.12']
    steps:
      - *checkout
      - <<: *setup-python
        name: Set up Python ${{ matrix.python }}
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
          cache-dependency-path: pyproject.toml
      - *cache-pip
      - *install-deps
      - name: Run tests
        run: |
          pytest -q --cov=cryptography_suite --cov-report=xml \
                 --cov-report=html --html=pytest-report.html
      - name: Run Atheris fuzz harnesses
        run: |
          for f in fuzz/fuzz_*.py; do
            echo "Fuzzing $f"
            timeout 30s python "$f" >/dev/null 2>&1 || echo "Fuzz run completed"
          done
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token: ${{ secrets.COVERALLS_REPO_TOKEN }}
          file: coverage.xml
          format: python
          flag-name: ${{ matrix.os }}-py${{ matrix.python }}
          parallel: true
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-py${{ matrix.python }}-reports
          path: |
            coverage.xml
            htmlcov
            pytest-report.html

  pkcs11-tests:
    name: PKCS#11 SoftHSM tests
    runs-on: ubuntu-latest
    env:
      PKCS11_LIBRARY: /usr/lib/softhsm/libsofthsm2.so
      PKCS11_TOKEN_LABEL: TestToken
      PKCS11_PIN: "1234"
    steps:
      - *checkout
      - <<: *setup-python
      - *cache-pip
      - *install-deps
      - name: Install HSM extras
        run: pip install .[hsm]
      - name: Install SoftHSM2
        run: |
          sudo apt-get update
          sudo apt-get install -y softhsm2 opensc
          softhsm2-util --init-token --slot 0 --label $PKCS11_TOKEN_LABEL --pin $PKCS11_PIN --so-pin 0000
      - name: Generate PKCS#11 keypair
        run: python tests/setup_pkcs11_fixture.py
      - name: Run PKCS#11 tests
        run: |
          pytest tests/test_pkcs11_keystore.py -q --cov=cryptography_suite \
                 --cov-report=xml --cov-report=html --html=pytest-report.html
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pkcs11-reports
          path: |
            coverage.xml
            htmlcov
            pytest-report.html

  coveralls-finish:
    name: Coverage finalize
    needs: test-matrix
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Finish Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token: ${{ secrets.COVERALLS_REPO_TOKEN }}
          parallel-finished: true

  summary:
    name: Summary
    needs: [static-analysis, doctest, test-matrix, pkcs11-tests, coveralls-finish]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Publish summary
        run: |
          echo "### Job Status" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.static-analysis.result }}" = "success" ]; then SA="✅"; else SA="❌"; fi
          if [ "${{ needs.doctest.result }}" = "success" ]; then DT="✅"; else DT="❌"; fi
          if [ "${{ needs.test-matrix.result }}" = "success" ]; then TM="✅"; else TM="❌"; fi
          if [ "${{ needs.pkcs11-tests.result }}" = "success" ]; then PK="✅"; else PK="❌"; fi
          echo "- static-analysis: $SA" >> $GITHUB_STEP_SUMMARY
          echo "- doctest: $DT" >> $GITHUB_STEP_SUMMARY
          echo "- test-matrix: $TM" >> $GITHUB_STEP_SUMMARY
          echo "- pkcs11-tests: $PK" >> $GITHUB_STEP_SUMMARY
