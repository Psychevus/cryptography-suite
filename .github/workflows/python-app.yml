name: Python CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  lint:
    name: Static Analysis
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Lint Tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 mypy pylint bandit vulture
          pip install -e .[dev]
      - name: Run flake8
        run: flake8
      - name: Run mypy
        run: mypy cryptography_suite
      - name: Run pylint
        run: pylint --errors-only cryptography_suite || true
      - name: Run bandit
        run: bandit -r cryptography_suite --exit-zero || true
      - name: Run vulture
        run: vulture cryptography_suite tests || true
      - name: Check deprecated exports
        run: python tools/check_deprecated_exports.py

  doctest:
    name: README Doctest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Run doctests on README
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          python -m doctest README.md

  tests:
    name: Unit Tests (Matrix)
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Test Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install pytest pytest-cov coverage mypy hypothesis
      - name: Dry-run keystore migration
        run: cryptography-suite keystore migrate --from local --to mock_hsm --dry-run
      - name: Run Tests with Coverage
        run: |
          coverage run --rcfile=.coveragerc -m pytest
          coverage xml
      - name: Upload Coverage to Coveralls
        uses: coverallsapp/github-action@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage.xml
          format: cobertura
          flag-name: OS-${{ matrix.os }}-py${{ matrix.python-version }}
          parallel: true

  tests-extras:
    name: Tests (With Extras)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Full Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install pqcrypto pybulletproofs
          pip install Pyfhel || echo "⚠️ Pyfhel build failed"
          pip install pytest pytest-cov coverage mypy hypothesis
      - name: Run Extended Tests
        run: |
          coverage run --rcfile=.coveragerc -m pytest
          coverage xml
      - name: Upload Extended Coverage to Coveralls
        uses: coverallsapp/github-action@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage.xml
          format: cobertura
          flag-name: extras
          parallel: true

  pkcs11-tests:
    name: PKCS11 Tests
    runs-on: ubuntu-latest
    env:
      SOFTHSM2_CONF: /etc/softhsm/softhsm2.conf
    services:
      softhsm:
        image: mosipid/softhsm
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y softhsm2
          sudo chown -R $USER:$USER /etc/softhsm /var/lib/softhsm
          python -m pip install --upgrade pip
          pip install -e .[dev,hsm]
      - name: Init token
        run: |
          softhsm2-util --init-token --slot 0 --label "TestToken" --pin 1234 --so-pin 0000
      - name: Seed keys
        run: |
          python - <<'PY'
          import pkcs11
          lib = pkcs11.lib('/usr/lib/softhsm/libsofthsm2.so')
          token = lib.get_token(token_label='TestToken')
          with token.open(user_pin='1234') as session:
              if not list(session.get_objects()):
                  session.generate_keypair(pkcs11.KeyType.RSA, 2048, label='rsa')
          PY
      - name: Run pkcs11 tests
        env:
          PKCS11_LIBRARY: /usr/lib/softhsm/libsofthsm2.so
          PKCS11_TOKEN_LABEL: TestToken
          PKCS11_PIN: 1234
        run: pytest tests/test_pkcs11_keystore.py

  coveralls:
    name: Finalize Coverage Merge
    needs: [tests, tests-extras]
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Parallel Coverage
        uses: coverallsapp/github-action@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
